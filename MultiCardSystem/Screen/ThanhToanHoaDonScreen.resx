<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="billBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBx1HEB9opBMogrsTKIK7EyiEuRMk
        e7ATJHuwEyV7sxMogrsRI3XAECNxvwwZU5kAAAAeAAAAAAAAAAAAAAASFSuPxCNI7/8jSO//I0jv/yNI
        7/8fQdXoDUSBtAgtWLYIYYW+ByNDuApAbLQhQ97vDBdKgwAAAAAAAAAAAAADViBB2eojSO//I0jv/yNI
        7/8jSO//EDF9uhC//v8IYoHED7Xx9AlrkMUPufb3FSyNxw8eY5oAAAAAAAAAIg4eYbUeP9HlI0jv/yNI
        7/8jSO//I0jv/x4/0eUNQHq0DCpkuw4/frYOKnC7DjR2tiBF4/UQIGqdAAAAAAUKHmUcOb3aHDrC3CNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//Dx5lmAAAAAAMGFKAGze32B49
        x98SJn7DEiN3wxozqNEjSO//HDrD3R49yd8ePs7jGTWpzBYtl8UjSO//I0jv/xAdYJQAAAAADx9mnRct
        l8ohQ+DyEyeBxSNI7/8cOL3ZDRlUthIlesMFCR/GEiZ+wxElebMaNrLUHTzE3iNI7/8OHF2RAAAACg4V
        L7gPH1y3H0LZ7Bgxn80RI3XCIEPd7RMngr8iReb1CxhQthUskcENG1e2EB5jtCJF5/YjSO//CRE4dwkJ
        A1VuaxHyZWMQ4x8nMq8ePs7lI0fs/B8/0+YaNrTWFy2WyhMpicYXLpvLGja01R08yuEaM6vRDBlVpQAA
        ABoJCQNXUE8Mz25rEfJzcRL9UE0MzURDCsdMSwrDLS4RtxwmR7QZMqDNIEXl9B8/0+cbOLnXDRdQmQAA
        AAEAAAAAAAAACwgRNqkYLpTJJDNnuS80MrQ/PxG/XFoO2nNxEvx0chL/a2gR7UdHDsYzOCy1HSxnuggQ
        NX4AAAAAAAAAAAAAAAAAAAALAwYRWQkUQ3MNG1qFDx9jlgcQM68IDSLCIik5tDk6HLhOTA3Ma2oR7l9f
        D94EBAA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwMDCVMJE0CIDRpWoAMG
        E7EODgJtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA8AEAAOAAAADgAAAAwAAAAMAAAACAAAAAgAAAAIAB
        AACAAQAAgAMAAIAHAADwBwAA/48AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFwAAAIMBAwi6AwcYwwQIHMEECBzBBAgcvwMFE7sBBAu4AQMHsAAAAasAAACqAAACqgED
        B7ADBhCwAwYVtwQIGr4ECBjHAgYVzQQGF8sBBA3DAAABsQAAAFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEEDBhPHGjOr0iNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8hROHxCxdKvgAAAIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJAwQOxyJG5vcjSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI
        7/8jSO//HDrB2hEjdcITKYnHDRxdwAQRH8UDEh/FCBE1wQ0bW78FDCTGFi2RyCNI7/8jSO//BQolwwAA
        AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFERI3PDI0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI
        7/8jSO//I0jv/xEidMIDIy/CCnqiygEUHMsHVnLBEL/+/xC//v8DGiHGCGWHxA+u5usELDnBFy6azCNI
        7/8TKIXFAAAAXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdRo3udYjSO//I0jv/yNI7/8jSO//I0jv/yNI
        7/8jSO//I0jv/yNI7/8iRuj3AQ8XyxC//v8Qv/7/AxohxxC+/f4Qv/7/Dqng5wMfKcYQv/7/EL/+/w+2
        8/YFDCTGI0jv/xkyqdAAAAB+AAAAAAAAAAAAAAAAAAAAAAAAADEAAgKpHjzG3iNI7/8jSO//I0jv/yNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yJG5/UDGiPFEL/+/xC//v8DHijFD7Pt8BC//v8OndHeBCw6wRC/
        /v8Qv/7/D6zl6gcOLMMjSO//Gze72AAAAIYAAAAAAAAAAAAAAAAAAAAQAwQOyAsWSb0aN7bVI0jv/yNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/wsXS78DJTHCCW2SxgMiLMQBCAzVBUFYvwQ0
        RcABAgbeBCo4vgU9Ub8BChHQHDq/3CNI7/8ePcjfAAAAhgAAAAAAAAAAAAAAAAAAAH8YMaDNECBswhgx
        os0jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/xs4utcRI3bCGjOq0SJH
        6vobOLrXHTvE3SNI7v8ePs/lHDrA3CJH6/sjSO//I0jv/xw6wdoAAACFAAAAAAAAAAAAAAAAAQEFvCNI
        7v0TJ4HFFCqOyCNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//Gja01QAAAH0AAAAAAAAAAAAA
        AAIEBhfGI0jv/xMng8UTKIXGI0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8aM6zRAAAAcwAA
        AAAAAAAAAAAAHgkTPsAjSO//EiV7wxQrj8kjSO//IkXn9gsYT78ECBjLCRNBwB07xN0ePcffI0jv/yNI
        7/8jSO//I0jv/yNI7/8jSO//I0jv/yNI7/8jSO//IUXj+SJF5/YjSO//I0jv/yNI7/8jSO//I0jv/xky
        qdAAAABrAAAAAAAAAAAAAAA/Dx5nwSNI7/8QIW/BFzCbzCNI7/8IEDbBFCqLyCNI7/8ePs7jIEHX6QQJ
        G8ojSO7+I0jv/x4+zuMJEz3ACA8ywCNI7/8gQdboDh1hwhw4u9kBBAnZAgQP0RAhbsEjSO//I0jv/yNI
        7/8jSO//GDKlzgAAAGsAAAAAAAAAAAAAAGwXL5vKI0jv/wsVSr4cOb7bI0jv/wUJIMgjSO//I0jv/yNI
        7/8jSO//CRI9wQ0dYMARInHCBQwkxhozqtEECRzJEiV8wgIGFc8cOb3gGDGezRAgasEjSO//CRM8wBk1
        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
        AB/gAAAf8AAAH//wAD///4A////w////////////
</value>
  </data>
</root>